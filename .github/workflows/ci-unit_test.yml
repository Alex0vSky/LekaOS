# CI Workflow

name: CI - Unit Tests

on:
  push:
    branches:
      - develop
      - master

  pull_request:
    branches:
      - develop
      - "feature/**"
      - "bugfix/**"

jobs:
  config_build_run:
    name: Config, Build & Run
    runs-on: [self-hosted, build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Create cache variables
        id: create_cache_variables
        run: |
          echo "::set-output name=runner_name::$(basename $(dirname $(dirname $(dirname $(pwd)))))"

      - name: Cache ccache files
        id: cache_ccache_files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${ { runner.os } }-cache-ccache_files-${ { steps.create_cache_variables.outputs.timestamp } }
          restore-keys: |
            ${ { runner.os } }-cache-ccache_files-

      - name: Cache Mbed OS
        id: cache_mbed_os
        uses: actions/cache@v2
        with:
          path: extern/mbed-os
          key: ${{ runner.os }}-cache-mbed_os-${{ hashFiles('extern/mbed-os/platform/include/platform/mbed_version.h', '.mbed_version') }}

      - name: Curl Mbed OS
        if: steps.cache_mbed_os.outputs.cache-hit != 'true'
        run: |
          make mbed_curl

      - name: Cache build unit tests directory
        id: cache_build_unit_tests_directory
        uses: actions/cache@v2
        with:
          path: _build_unit_tests
          key: ${{ runner.os }}-${{ steps.create_cache_variables.outputs.runner_name }}-cache-build_unit_tests_directory-${{ hashFiles('Makefile', 'tests/unit/CMakeLists.txt') }}

      - name: Config build system
        if: steps.cache_build_unit_tests_directory.outputs.cache-hit != 'true'
        run: |
          make config_unit_tests

      - name: Build & run unit tests
        run: |
          make ut

      - name: Generate code coverage
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: 8de9444a64780871f476dc71b6ef5ed0406880cc6803680982ceefb84dc96633
        with:
          debug: true
          prefix: ${{github.workspace}}
          coverageCommand: make coverage_lcov
          coverageLocations: ${{github.workspace}}/_build_unit_tests/_coverage/coverage.info:lcov
